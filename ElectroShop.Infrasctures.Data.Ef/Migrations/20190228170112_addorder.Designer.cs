// <auto-generated />
using System;
using ElectroShop.Infrasctures.Data.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ElectroShop.Infrasctures.Data.Ef.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190228170112_addorder")]
    partial class addorder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ElectroShop.Domain.Entities.Category", b =>
                {
                    b.Property<byte>("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("ID");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            ID = (byte)1,
                            Name = "تخفیفات ویژه"
                        },
                        new
                        {
                            ID = (byte)2,
                            Name = "لب تاب"
                        },
                        new
                        {
                            ID = (byte)3,
                            Name = "موبایل"
                        },
                        new
                        {
                            ID = (byte)4,
                            Name = "دوربین"
                        },
                        new
                        {
                            ID = (byte)5,
                            Name = "لوازم جانبی"
                        });
                });

            modelBuilder.Entity("ElectroShop.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(4000);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("InfoPay");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PostCode");

                    b.Property<int>("Quntity");

                    b.Property<string>("Tel");

                    b.Property<decimal>("TotalPrice");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ElectroShop.Domain.Entities.FFiles", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("FileType")
                        .HasMaxLength(10);

                    b.Property<string>("Path")
                        .HasMaxLength(2000);

                    b.Property<int>("Product_ID");

                    b.HasKey("ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("Files");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            FileName = "product01.png",
                            Product_ID = 1
                        },
                        new
                        {
                            ID = 2L,
                            FileName = "product02.png",
                            Product_ID = 2
                        },
                        new
                        {
                            ID = 3L,
                            FileName = "product03.png",
                            Product_ID = 3
                        },
                        new
                        {
                            ID = 4L,
                            FileName = "product01.png",
                            Product_ID = 4
                        },
                        new
                        {
                            ID = 5L,
                            FileName = "product01.png",
                            Product_ID = 5
                        },
                        new
                        {
                            ID = 6L,
                            FileName = "product02.png",
                            Product_ID = 6
                        },
                        new
                        {
                            ID = 7L,
                            FileName = "product03.png",
                            Product_ID = 7
                        },
                        new
                        {
                            ID = 8L,
                            FileName = "product01.png",
                            Product_ID = 8
                        },
                        new
                        {
                            ID = 9L,
                            FileName = "product01.png",
                            Product_ID = 9
                        },
                        new
                        {
                            ID = 10L,
                            FileName = "product02.png",
                            Product_ID = 10
                        },
                        new
                        {
                            ID = 11L,
                            FileName = "product03.png",
                            Product_ID = 11
                        },
                        new
                        {
                            ID = 12L,
                            FileName = "product01.png",
                            Product_ID = 12
                        });
                });

            modelBuilder.Entity("ElectroShop.Domain.Entities.Order", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Customer_ID");

                    b.Property<int>("Product_ID");

                    b.HasKey("ID");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ElectroShop.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("Category_ID");

                    b.Property<string>("Color")
                        .IsRequired();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<decimal?>("DiscountPrice");

                    b.Property<decimal>("Price");

                    b.Property<int?>("Rate");

                    b.Property<string>("Size")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<int>("Type");

                    b.HasKey("ID");

                    b.HasIndex("Category_ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Category_ID = (byte)1,
                            Color = "قرمز",
                            Description = "توضیحات کوتاه درباره محصول",
                            DiscountPrice = 50m,
                            Price = 12000000m,
                            Rate = 5,
                            Size = "L",
                            Title = "نام محصول",
                            Type = 2
                        },
                        new
                        {
                            ID = 2,
                            Category_ID = (byte)2,
                            Color = "آبی",
                            Description = "توضیحات کوتاه درباره محصول",
                            DiscountPrice = 30m,
                            Price = 4500000m,
                            Rate = 3,
                            Size = "XL",
                            Title = "نام محصول",
                            Type = 2
                        },
                        new
                        {
                            ID = 3,
                            Category_ID = (byte)3,
                            Color = "قرمز",
                            Description = "توضیحات کوتاه درباره محصول",
                            Price = 5000000m,
                            Rate = 5,
                            Size = "L",
                            Title = "نام محصول",
                            Type = 2
                        },
                        new
                        {
                            ID = 4,
                            Category_ID = (byte)4,
                            Color = "قرمز",
                            Description = "توضیحات کوتاه درباره محصول",
                            Price = 999m,
                            Rate = 5,
                            Size = "L",
                            Title = "نام محصول",
                            Type = 2
                        },
                        new
                        {
                            ID = 5,
                            Category_ID = (byte)1,
                            Color = "قرمز",
                            Description = "توضیحات کوتاه درباره محصول",
                            DiscountPrice = 50m,
                            Price = 999m,
                            Rate = 5,
                            Size = "L",
                            Title = "نام محصول",
                            Type = 0
                        },
                        new
                        {
                            ID = 6,
                            Category_ID = (byte)2,
                            Color = "Blue",
                            Description = "توضیحات کوتاه درباره محصول",
                            DiscountPrice = 30m,
                            Price = 785m,
                            Rate = 3,
                            Size = "XL",
                            Title = "نام محصول",
                            Type = 0
                        },
                        new
                        {
                            ID = 7,
                            Category_ID = (byte)3,
                            Color = "Red",
                            Description = "توضیحات کوتاه درباره محصول",
                            Price = 999m,
                            Rate = 5,
                            Size = "L",
                            Title = "نام محصول",
                            Type = 0
                        },
                        new
                        {
                            ID = 8,
                            Category_ID = (byte)4,
                            Color = "Red",
                            Description = "توضیحات کوتاه درباره محصول",
                            Price = 999m,
                            Rate = 5,
                            Size = "L",
                            Title = "نام محصول",
                            Type = 0
                        },
                        new
                        {
                            ID = 9,
                            Category_ID = (byte)1,
                            Color = "Red",
                            Description = "توضیحات کوتاه درباره محصول",
                            DiscountPrice = 50m,
                            Price = 999m,
                            Rate = 5,
                            Size = "L",
                            Title = "نام محصول",
                            Type = 1
                        },
                        new
                        {
                            ID = 10,
                            Category_ID = (byte)2,
                            Color = "Blue",
                            Description = "توضیحات کوتاه درباره محصول",
                            DiscountPrice = 30m,
                            Price = 785m,
                            Rate = 3,
                            Size = "XL",
                            Title = "نام محصول",
                            Type = 1
                        },
                        new
                        {
                            ID = 11,
                            Category_ID = (byte)3,
                            Color = "Red",
                            Description = "توضیحات کوتاه درباره محصول",
                            Price = 999m,
                            Rate = 5,
                            Size = "L",
                            Title = "نام محصول",
                            Type = 1
                        },
                        new
                        {
                            ID = 12,
                            Category_ID = (byte)4,
                            Color = "Red",
                            Description = "توضیحات کوتاه درباره محصول",
                            Price = 999m,
                            Rate = 5,
                            Size = "L",
                            Title = "نام محصول",
                            Type = 1
                        });
                });

            modelBuilder.Entity("ElectroShop.Domain.Entities.FFiles", b =>
                {
                    b.HasOne("ElectroShop.Domain.Entities.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ElectroShop.Domain.Entities.Order", b =>
                {
                    b.HasOne("ElectroShop.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ElectroShop.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ElectroShop.Domain.Entities.Product", b =>
                {
                    b.HasOne("ElectroShop.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Category_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
